{"version":3,"sources":["webpack:///webpack/bootstrap c3d9e70d9a76d54ae6fa","webpack:///./src/server/server.js","webpack:///external \"express\"","webpack:///external \"http\"","webpack:///external \"socket.io\"","webpack:///./src/server/memory-game.js","webpack:///./src/shared/game.js","webpack:///external \"es6-event-emitter\"","webpack:///./src/shared/player.js","webpack:///./src/cards.json","webpack:///external \"guid\"","webpack:///external \"fs\"","webpack:///external \"path\""],"names":["express","require","app","router","Router","server","Server","io","use","static","get","req","res","sendfile","listen","Guid","fs","path","Cards","JSON","parse","readFileSync","pairs","getRandomCards","sort","a","b","Math","random","cardsToUse","i","card","floor","push","name","src","tryStartGame","game","startGameInterval","setInterval","console","log","players","length","newGame","clearTimeout","memoryGame","setCards","on","error","emit","player","guid","getState","cards","index","getCard","socket","flipCard","cardsSearchString","resetGame","removePlayer","timeout","setTimeout","existingPlayer","getPlayer","disconnect","raw","addPlayer","getInfo","next","images","join","dirname","realpathSync","__filename","sendFile","params","image","root","module","exports","Game","currentTurn","firstCard","secondCard","trigger","started","pickNextPlayer","forEach","found","flipped","stopTurnTimeoutInterval","pickNextPlayerTimeout","newCard","find","Object","assign","updateCard","pairsLeft","concat","getPairsLeft","getLeadingPlayerGuid","nextTurn","playerIndex","findIndex","splice","nextGuid","indexOf","nextPlayer","nextTurnInterval","clearInterval","nextTurnSecondsLeft","Date","now","secondsLeft","round","nextTurnTimeout","map","state","Player","color","totalPoints"],"mappings":"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","file":"server.build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./build/server/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c3d9e70d9a76d54ae6fa","'use strict';\r\n\r\nconst express = require('express');\r\nconst app = express();\r\nconst router = express.Router();\r\n\r\nconst server = require('http').Server(app);\r\nconst io = require('socket.io')(server);\r\n\r\napp.use(express.static('./build/client'));\n\r\napp.use(require('./memory-game')(io));\r\n\r\napp.get('/', function(req, res) {\r\n    res.sendfile('./build/client/index.html');\n});\r\n\r\nserver.listen(8080);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/server.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 4\n// module chunks = 0","const express = require('express');\r\nconst Guid = require('guid');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nimport Game from '../shared/game';\r\nimport CardsJSON from '../cards.json';\r\nconst Cards = typeof CardsJSON === \"string\" ? JSON.parse(fs.readFileSync(CardsJSON, 'utf8')) : CardsJSON;\r\n\r\nconst pairs = 8;\r\n\r\nconst getRandomCards = () => {\r\n  Cards.sort((a,b) => {\r\n    return 0.5 - Math.random();\r\n  });\r\n\r\n  let cardsToUse = [];\r\n\r\n//select cards\r\n  for(let i = 0; i < pairs*2; ++i){\r\n    const card = Cards[Math.floor(i/2)];\r\n    cardsToUse.push({\r\n      name: card.name,\r\n      src: card.src\r\n    })\r\n  }\r\n\r\n//randomize selected cards\r\n  cardsToUse.sort((a,b) => {\r\n    return 0.5 - Math.random();\r\n  });\r\n\r\n  return cardsToUse;\r\n}\r\n\r\nconst tryStartGame = (game) => {\r\n  let startGameInterval = setInterval(()=> {\r\n      console.log('Trying to start a new game...');\r\n\r\n      if(game.players.length < 1){\r\n        console.log('error', 'Minimum of 1 players needed to start a game!');\r\n        return;\r\n      }\r\n\r\n      game.newGame();\r\n      console.log('Game started!');\r\n      clearTimeout(startGameInterval);\r\n      startGameInterval = null;\r\n\r\n\r\n  }, 2000);\r\n}\r\n\r\n\r\nconst memoryGame = (io) => {\r\n  const router = express.Router();\r\n  const game = new Game();\r\n  game.setCards(getRandomCards());\r\n\r\n  //game.on('status', status => console.log('GAME_STATUS', status));\r\n  game.on('error', error => console.log('GAME_ERROR', error));\r\n  game.on('addPlayer', player => io.emit('addPlayer', player));\r\n  game.on('removePlayer', guid => io.emit('removePlayer', guid));\r\n  game.on('updatePlayer', player => io.emit('updatePlayer', player));\r\n  game.on('newGame', () => io.emit('newGame'));\r\n  game.on('resetGame', () => io.emit('resetGame'));\r\n  game.on('setCards', () => io.emit('setCards', game.getState().cards));\r\n  game.on('flipCard', (guid, index) => {\r\n    const card = game.getCard(index);\r\n\r\n    //make client aware of card contents\r\n    io.emit('updateCard', {\r\n      index: card.index,\r\n      name: card.name,\r\n      src: card.src\r\n    });\r\n\r\n    //flip card on client\r\n    console.log('FlipCard', {guid: guid, index: card.index});\r\n    io.emit('flipCard', {guid: guid, index: card.index});\r\n  });\r\n\r\n  //game.on('wait', text => io.emit('status', text));\r\n\r\n  game.on('gameFinished', player => {\r\n    console.log('Game finished!');\r\n    //io.emit('status', 'Game finished, will try to start a new game in 10 seconds');\r\n    //setTimeout(() => tryStartGame(game), 1000*10);\r\n  });\r\n\r\n  io.on('connection', function(socket){\r\n    console.log('Got a new connection!');\n    socket.emit('status', 'Connected!');\r\n\r\n    socket.on('flipCard', index => {\r\n      if(!socket.player){\r\n        return;\r\n      }\r\n\r\n      console.log('Player tried to flip card', index);\r\n      const player = socket.player;\r\n      game.flipCard(player.guid, index);\r\n    });\r\n\r\n    socket.on('requestNewGame', (cardsSearchString) => {\r\n      console.log('Got New Game request');\r\n      game.setCards(getRandomCards());\r\n      game.newGame();\r\n    });\r\n\r\n    socket.on('requestResetGame', () => {\r\n      console.log('Got Reset Game request');\r\n      game.resetGame();\r\n    });\n\n    socket.on('leave', () => {\n      if(!socket.player){\n        return;\n      }\n      const guid = socket.player.guid;\n      socket.player = null;\n      game.removePlayer(guid);\n    })\n\r\n    socket.on('disconnect', () => {\n      if(!socket.player){\n        return;\n      }\n\n      const guid = socket.player.guid;\n      socket.player.timeout = setTimeout(() => {\n        //delete a player after being disconnected for 10 seconds\n        console.log('10 seconds have passed so we will remove player!');\n        game.removePlayer(guid);\n      }, 1000*5);\n    })\r\n\r\n    socket.on('join', (player) => {\n      if(!player){\r\n        return socket.emit('game_error', 'You need to send some player data!');\r\n      }\r\n\r\n      const name = player.name;\r\n      const guid = player.guid;\r\n\r\n      if(player.guid){\r\n        let existingPlayer = game.getPlayer(player.guid);\r\n        if(existingPlayer){\r\n            if(existingPlayer.timeout){\r\n              clearTimeout(existingPlayer.timeout);\r\n            }\r\n            existingPlayer.socket.player = null;\r\n            existingPlayer.socket.disconnect();\r\n            player = existingPlayer;\r\n        }else{\r\n          //socket.emit('game_error', 'Couldnt find player with GUID: ' + guid);\r\n          player.guid = Guid.raw();\r\n          player = game.addPlayer(player); //Add new player\r\n        }\r\n      }else{\r\n        player.guid = Guid.raw();\r\n        player = game.addPlayer(player);\r\n      }\r\n\r\n      socket.player = player;\r\n      player.socket = socket;\r\n\r\n      socket.emit('joinGame', player.getInfo());\n      console.log('Auth', name, guid);\r\n    });\n\n    socket.emit('gameState', game.getState());\n\r\n  });\r\n\r\n  //will loop until conditions for game is right and is started\r\n  //tryStartGame(game);\r\n\r\n  /*\r\n    Serve images for our game\r\n  */\r\n  router.get('/images/:image',  (req, res, next) => {\r\n    //console.log(path.resolve(__dirname, '../images'), __dirname, path.join(__dirname, '../images', req.params.image));\r\n    const images  = path.join(path.dirname(fs.realpathSync(__filename)), '../images');\r\n    res.sendFile(req.params.image, {root: images});\r\n  });\r\n\r\n  return router;\r\n}\r\n\r\nmodule.exports = memoryGame;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/memory-game.js","import EventEmitter from 'es6-event-emitter';\r\nimport Player from './player';\r\n\r\nclass Game extends EventEmitter{\r\n  constructor(){\r\n    super();\r\n    this.players = [];\r\n    this.cards = [];\r\n\r\n    this.currentTurn = null;\r\n    this.firstCard = null;\r\n    this.secondCard = null;\r\n  }\r\n\r\n  newGame() {\n    if(this.players.length < 1){\n      this.trigger('error', 'You need at least 1 player to start a game!');\n      return;\n    }\n\n    this.resetGame();\r\n    this.started = true;\r\n    this.trigger('newGame');\r\n    this.pickNextPlayer();\r\n  }\r\n\r\n  resetGame() {\r\n    this.players.forEach(player => player.pairs = 0);\r\n    this.cards.forEach(card => {\r\n      card.found = false;\r\n      card.flipped = false;\r\n    });\r\n\r\n    this.started = false;\r\n    this.currentTurn = null;\r\n    this.firstCard = null;\r\n    this.secondCard = null;\r\n\r\n    this.stopTurnTimeoutInterval();\r\n\r\n    if(this.pickNextPlayerTimeout){\r\n      clearTimeout(this.pickNextPlayerTimeout);\r\n      this.pickNextPlayerTimeout = null;\r\n    }\r\n\r\n    this.trigger('status', 'Game Reset!');\r\n    this.trigger('resetGame');\r\n  }\r\n\r\n  setCards(cards) {\r\n    this.cards = [];\r\n    cards.forEach((card, i) => {\r\n      this.cards.push({\r\n        index: i,\r\n        name: card.name,\r\n        src: card.src,\r\n        flipped: card.flipped || false,\r\n        found: card.found\r\n      });\r\n    });\r\n    this.trigger('setCards', cards);\r\n  }\r\n\r\n  updateCard(newCard){\r\n    let card = this.cards.find(card => {\r\n      return newCard.index === card.index;\r\n    });\r\n\r\n    Object.assign(card, newCard);\r\n    this.trigger('updateCard', newCard);\r\n  }\r\n\r\n  getCard(index){\r\n    return this.cards[index];\r\n  }\r\n\r\n  updateCards(cards) {\r\n    cards.forEach(card => {\r\n      this.updateCard(card);\r\n    });\r\n  }\r\n\r\n  getPairsLeft(){\r\n    let pairsLeft = this.cards.length;\r\n    this.cards.forEach(card => {\r\n      if(card.found){\r\n        pairsLeft--;\r\n      }\r\n    })\r\n    pairsLeft /= 2;\r\n    return pairsLeft;\r\n  }\r\n\r\n  getLeadingPlayerGuid(){\r\n    return this.players.concat().sort((a, b) => {\r\n      return a.pairs < b.pairs;\r\n    })[0].guid;\r\n  }\r\n\r\n  flipCard(guid, index){\r\n    const player = this.getPlayer(guid);\r\n\r\n    if(!player){\r\n      this.trigger('error', 'Player who tried to flip card doesnt exist!');\r\n      return;\r\n    }\r\n\r\n    if(this.currentTurn != guid){\r\n      this.trigger('error', 'player tried to flip card without it being their turn!');\r\n      return;\r\n    }\r\n\r\n    const card = this.cards[index];\r\n\r\n    if(!card){\r\n      this.trigger('error', 'Card doesnt exist!');\r\n      return;\r\n    }\r\n\r\n    if(card.flipped){\r\n      this.trigger('error', 'player tried to flip card thats already flipped!');\r\n      return;\r\n    }\r\n\r\n    if(card.found){\r\n      this.trigger('error', 'player tried to flip card thats already found!');\r\n      return;\r\n    }\r\n\r\n    if(this.firstCard !== null && this.secondCard !== null){\r\n      this.trigger('error', 'This player already picked 2 cards!');\r\n      return;\r\n    }\r\n\r\n    if(this.firstCard === null){\r\n      this.firstCard = card.index;\r\n      card.flipped = true;\r\n    }else if(this.secondCard  === null){\r\n      this.secondCard = card.index;\r\n      card.flipped = true;\r\n    }\r\n\r\n    console.log('FlipCard', this.firstCard, this.secondCard);\r\n\r\n    if(this.firstCard !== null && this.secondCard !== null){\r\n      const firstCard = this.getCard(this.firstCard),\r\n            secondCard = this.getCard(this.secondCard);\r\n\r\n      if(firstCard.name && firstCard.name === secondCard.name){\r\n        //player scored\r\n        firstCard.found = true;\r\n        secondCard.found = true;\r\n\r\n        console.log('FOUND PAIR', this.firstCard, this.secondCard);\r\n\r\n        player.pairs++;\r\n\r\n        this.trigger('foundPair', player.guid, [this.firstCard, this.secondCard]);\r\n\r\n        if(this.getPairsLeft() === 0){\r\n          this.stopTurnTimeoutInterval();\r\n          this.started = false;\r\n          this.trigger('status', 'Game completed!');\r\n          this.trigger('gameFinished', this.getLeadingPlayerGuid());\r\n        }\r\n\r\n        //same player can pick cards again\r\n        this.trigger('flipCard', player.guid, index);\r\n        this.nextTurn(this.currentTurn);\r\n        return;\r\n      }else{\r\n        //wait a bit before we set next player\r\n        this.stopTurnTimeoutInterval();\r\n        this.trigger('status', 'Checkout the cards and remember them!');\r\n        this.pickNextPlayerTimeout = setTimeout(() => this.pickNextPlayer(), 3000);\r\n      }\r\n    }\r\n\r\n    this.trigger('flipCard', player.guid, index);\r\n  }\r\n\r\n  addPlayer(player) {\r\n    player = new Player(player);\r\n    this.players.push(player);\r\n    this.trigger('addPlayer', player);\r\n    return player;\r\n  }\r\n\r\n  removePlayer(guid) {\r\n    const playerIndex = this.players.findIndex(player => {return player.guid === guid});\r\n    console.log('Removed Player', playerIndex, guid);\r\n    const player = this.players[playerIndex];\r\n    this.players.splice(playerIndex, 1);\r\n\r\n    if(player && this.currentTurn === player.guid){\r\n      if(this.players.length > 0){\r\n        let nextGuid = this.players[(playerIndex+1) % this.players.length].guid;\r\n        this.nextTurn(nextGuid);\r\n      }else{\r\n        this.started = false;\r\n      }\r\n    }\r\n\r\n    this.trigger('removePlayer', guid);\r\n  }\r\n\r\n  updatePlayer() {\r\n\r\n  }\r\n\r\n  getPlayer(guid){\r\n    return this.players.find(player => {return player.guid === guid});\r\n  }\r\n\r\n  pickNextPlayer(){\r\n    const player = this.getPlayer(this.currentTurn);\r\n    if(this.players.length > 0){\r\n      const index = this.players.indexOf(player) + 1;\r\n      const nextPlayer = this.players[index % this.players.length];\r\n      this.nextTurn(nextPlayer.guid);\r\n    }else{\r\n      this.started = false;\r\n    }\r\n  }\r\n\r\n  stopTurnTimeoutInterval(){\r\n    if(this.nextTurnInterval){\r\n      clearInterval(this.nextTurnInterval);\r\n      this.nextTurnInterval = null;\r\n    }\r\n  }\r\n\r\n\r\n//todo: make this a timeout and create the timer on client instead\r\n  nextTurnTimeout(){\r\n    if(!this.started){\r\n      //should not do anything if theres no game going on!\r\n      return;\r\n    }\r\n\r\n    this.nextTurnSecondsLeft = this.nextTurnSecondsLeft || Date.now() + 1000*30;\r\n\r\n    if(this.nextTurnInterval){\r\n      console.log('This interval should not exist!!!');\r\n      this.stopTurnTimeoutInterval();\r\n    }\r\n\r\n    this.nextTurnInterval = setInterval(()=> {\r\n\r\n      let secondsLeft = (this.nextTurnSecondsLeft - Date.now())/1000;\r\n\r\n      this.trigger('status', 'Player got ' + Math.round( secondsLeft * 10 ) / 10 + ' seconds to pick 2 cards!');\r\n      if(secondsLeft <= 0){\r\n        clearInterval(this.nextTurnInterval);\r\n        this.nextTurnInterval = null;\r\n        this.pickNextPlayer();\r\n      }\r\n\r\n\r\n    }, 100*1);\r\n  }\r\n\r\n  nextTurn(guid) {\r\n    //unflip cards whos pair are not found yet\r\n    if(this.firstCard !== null && !this.getCard(this.firstCard).found){\r\n      this.updateCard({\r\n        index: this.firstCard,\r\n        flipped: false\r\n      });\r\n    }\r\n\r\n    if(this.secondCard !== null && !this.getCard(this.secondCard).found){\r\n      this.updateCard({\r\n        index: this.secondCard,\r\n        flipped: false\r\n      });\r\n    }\r\n\r\n    this.firstCard = null;\r\n    this.secondCard = null;\r\n    this.currentTurn = guid;\r\n    this.trigger('nextTurn', guid);\r\n    this.nextTurnSecondsLeft = Date.now() + 1000*30;\r\n    this.nextTurnTimeout();\r\n  }\r\n\r\n\r\n  getState() {\r\n    return {\r\n      started: this.started,\r\n      nextTurnSecondsLeft: this.nextTurnSecondsLeft,\r\n      firstCard: this.firstCard,\r\n      secondCard: this.secondCard,\r\n      currentTurn: this.currentTurn,\r\n      players: this.players.map(player => {return player.getInfo(); }),\r\n      cards: this.cards.map((card, i) => {\r\n        return {\r\n          index: i,\r\n          name: card.flipped ? card.name : null,\r\n          flipped: card.flipped,\r\n          found: card.found,\r\n          src: card.flipped ? card.src : '',\r\n        };\r\n      })\r\n    }\r\n  }\r\n\r\n  setState(state) {\r\n    this.started = state.started;\r\n    this.nextTurnSecondsLeft = state.nextTurnSecondsLeft;\r\n    this.firstCard = state.firstCard;\r\n    this.secondCard = state.secondCard;\r\n    this.currentTurn = state.currentTurn;\r\n\r\n    this.players = state.players.map(player => {\r\n      return new Player(player);\r\n    });\r\n\r\n    this.cards = state.cards.map(card => {\r\n      return card;\r\n    });\r\n    this.nextTurnTimeout();\r\n    this.trigger('setState', state);\r\n  }\r\n\r\n}\r\n\r\nexport default Game;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/game.js","module.exports = require(\"es6-event-emitter\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"es6-event-emitter\"\n// module id = 7\n// module chunks = 0","\r\nclass Player{\r\n  constructor(player){\r\n    this.guid = player.guid;\r\n    this.name = player.name;\r\n    this.color = player.color;\r\n    this.pairs = player.pairs || 0;\n    this.totalPoints = 0;\r\n  }\r\n\r\n  getInfo(){\r\n    return {\r\n      guid: this.guid,\r\n      name: this.name,\r\n      color: this.color,\r\n      pairs: this.pairs,\r\n      totalPoints: this.totalPoints\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Player;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/player.js","module.exports = __webpack_public_path__ + \"77c11d6bae0ca6044bd397efcee9d0f5.json\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/cards.json\n// module id = 9\n// module chunks = 0","module.exports = require(\"guid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"guid\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 12\n// module chunks = 0"],"sourceRoot":""}