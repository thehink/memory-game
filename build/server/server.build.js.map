{"version":3,"sources":["webpack:///webpack/bootstrap d2193631ee34f162a992","webpack:///./src/server/server.js","webpack:///external \"express\"","webpack:///external \"http\"","webpack:///external \"socket.io\"","webpack:///./src/server/memory-game.js","webpack:///./src/shared/game.js","webpack:///external \"es6-event-emitter\"","webpack:///./src/shared/player.js","webpack:///./src/cards.json","webpack:///external \"guid\"","webpack:///external \"fs\"","webpack:///external \"path\""],"names":["express","require","app","router","Router","server","Server","io","use","static","get","req","res","sendfile","listen","Guid","fs","path","Cards","JSON","parse","readFileSync","pairs","getRandomCards","sort","a","b","Math","random","cardsToUse","i","card","floor","push","name","src","memoryGame","game","setCards","on","console","log","error","emit","player","guid","cards","index","getCard","text","socket","flipCard","timeout","setTimeout","removePlayer","existingPlayer","getPlayer","clearTimeout","disconnect","raw","addPlayer","getInfo","getState","setInterval","players","length","started","nextTurn","pairsLeft","forEach","found","next","images","join","dirname","realpathSync","__filename","sendFile","params","image","root","module","exports","Game","currentTurn","firstCard","secondCard","flipped","trigger","newCard","find","Object","assign","updateCard","concat","getPairsLeft","getLeadingPlayerGuid","indexOf","nextPlayer","playerIndex","findIndex","splice","parseInt","nextGuid","map","state","Player","color","totalPoints"],"mappings":"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","file":"server.build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./build/server/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d2193631ee34f162a992","'use strict';\r\n\r\nconst express = require('express');\r\nconst app = express();\r\nconst router = express.Router();\r\n\r\nconst server = require('http').Server(app);\r\nconst io = require('socket.io')(server);\r\n\r\napp.use(express.static('./build/client'));\n\r\napp.use(require('./memory-game')(io));\r\n\r\napp.get('/', function(req, res) {\r\n    res.sendfile('./build/client/index.html');\n});\r\n\r\nserver.listen(8080);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/server.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 4\n// module chunks = 0","const express = require('express');\r\nconst Guid = require('guid');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nimport Game from '../shared/game';\r\nimport asdasd from '../cards.json';\r\nconst Cards = typeof asdasd === \"string\" ? JSON.parse(fs.readFileSync(asdasd, 'utf8')) : asdasd;\r\n\r\nconst pairs = 8;\r\n\r\nconst getRandomCards = () => {\r\n  Cards.sort((a,b) => {\r\n    return 0.5 - Math.random();\r\n  });\r\n\r\n  let cardsToUse = [];\r\n\r\n//select cards\r\n  for(let i = 0; i < pairs*2; ++i){\r\n    const card = Cards[Math.floor(i/2)];\r\n    cardsToUse.push({\r\n      name: card.name,\r\n      src: card.src\r\n    })\r\n  }\r\n\r\n//randomize selected cards\r\n  cardsToUse.sort((a,b) => {\r\n    return 0.5 - Math.random();\r\n  });\r\n\r\n  return cardsToUse;\r\n}\r\n\r\n\r\nconst memoryGame = (io) => {\r\n  const router = express.Router();\r\n  const game = new Game();\r\n  game.setCards(getRandomCards());\r\n\r\n  game.on('error', error => {\r\n    console.log('Error', error);\r\n  });\r\n\r\n  game.on('addPlayer', player => {\r\n    io.emit('addPlayer', player);\r\n  });\r\n\r\n  game.on('removePlayer', guid => {\r\n    io.emit('removePlayer', guid);\r\n  });\r\n\r\n  game.on('updatePlayer', player => {\r\n    io.emit('updatePlayer', player);\r\n  });\r\n\r\n  game.on('nextTurn', guid => {\n    io.emit('nextTurn', guid);\n  });\r\n\r\n  game.on('foundPair', (guid, cards) => {\r\n    //io.emit('foundPair', {guid:guid, cards:cards});\n  });\r\n\r\n  game.on('flipCard', (guid, index) => {\r\n    const card = game.getCard(index);\r\n\r\n    //make client aware of card contents\r\n    io.emit('updateCard', {\n      index: card.index,\n      name: card.name,\n      src: card.src\n    });\n\r\n    //flip card on client\r\n    console.log('FlipCard', {guid: guid, index: card.index});\r\n    io.emit('flipCard', {guid: guid, index: card.index});\r\n  });\r\n\r\n  game.on('wait', text => {\r\n    io.emit('status', text);\r\n  });\r\n\r\n  game.on('gameFinished', player => {\r\n    console.log('Game finished!');\r\n  });\r\n\r\n  io.on('connection', function(socket){\r\n    console.log('a user connected');\r\n    socket.emit('status', 'Connected...');\r\n\r\n    socket.on('flipCard', index => {\r\n      if(!socket.player){\r\n        return;\r\n      }\r\n\r\n      console.log('Player tried to flip card', index);\r\n      const player = socket.player;\r\n      game.flipCard(player.guid, index);\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      if(socket.player){\r\n        const guid = socket.player.guid;\r\n        socket.player.timeout = setTimeout(() => {\r\n          //delete a player after being disconnected for 10 seconds\r\n          console.log('10 seconds have passed so we will remove player!');\r\n          game.removePlayer(guid);\r\n        }, 1000*10);\r\n      }\r\n    })\r\n\r\n    socket.on('auth', (player) => {\r\n      if(!player){\r\n        return socket.emit('game_error', 'You need to send some player data!');\r\n      }\r\n\r\n      const name = player.name;\r\n      const guid = player.guid;\r\n\r\n      if(player.guid){\r\n        let existingPlayer = game.getPlayer(player.guid);\r\n        if(existingPlayer){\r\n            if(existingPlayer.timeout){\r\n              clearTimeout(existingPlayer.timeout);\r\n            }\r\n            existingPlayer.socket.player = null;\r\n            existingPlayer.socket.disconnect();\r\n            player = existingPlayer;\r\n        }else{\r\n          //socket.emit('game_error', 'Couldnt find player with GUID: ' + guid);\r\n          player.guid = Guid.raw();\r\n          player = game.addPlayer(player); //Add new player\r\n        }\r\n      }else{\r\n        player.guid = Guid.raw();\r\n        player = game.addPlayer(player);\r\n      }\r\n\r\n      socket.player = player;\r\n      player.socket = socket;\r\n\r\n      socket.emit('authSuccess', player.getInfo());\r\n      socket.emit('gameState', game.getState());\r\n      console.log('Auth', name, guid);\r\n    });\r\n\r\n  });\r\n\r\n  /*\r\n\r\n  GAME LOOP\r\n\r\n  */\r\n  setInterval(()=> {\r\n    if(game.players.length < 2){\r\n      io.emit('status', 'Not enough players!');\r\n      return;\r\n    }\r\n\r\n    if(!game.started){\r\n      game.started = true;\r\n      io.emit('status', 'Starting new game...');\r\n      game.setCards(getRandomCards());\r\n      io.emit('gameState', game.getState());\r\n      game.nextTurn(game.players[0].guid);\r\n    }\r\n\r\n    let pairsLeft = game.cards.length;\r\n    game.cards.forEach(card => {\r\n      if(card.found){\r\n        pairsLeft--;\r\n      }\r\n    })\r\n    pairsLeft /= 2;\r\n\r\n    //io.emit('status', 'Pairs left... ' + pairsLeft);\r\n\r\n\r\n  }, 3000);\r\n\r\n  /*\r\n    Serve images for our game\r\n  */\r\n  router.get('/images/:image',  (req, res, next) => {\n    //console.log(path.resolve(__dirname, '../images'), __dirname, path.join(__dirname, '../images', req.params.image));\n    const images  = path.join(path.dirname(fs.realpathSync(__filename)), '../images');\n    res.sendFile(req.params.image, {root: images});\n  });\r\n\r\n  return router;\r\n}\r\n\r\nmodule.exports = memoryGame;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/memory-game.js","import EventEmitter from 'es6-event-emitter';\r\nimport Player from './player';\r\n\r\nclass Game extends EventEmitter{\r\n  constructor(){\r\n    super();\r\n    this.players = [];\r\n    this.cards = [];\r\n\r\n    this.currentTurn = null;\r\n    this.firstCard = null;\r\n    this.secondCard = null;\r\n  }\r\n\r\n  setCards(cards) {\r\n    this.cards = [];\r\n    cards.forEach((card, i) => {\r\n      this.cards.push({\r\n        index: i,\r\n        name: card.name,\r\n        src: card.src,\r\n        flipped: card.flipped || false,\r\n        found: card.found\r\n      });\r\n    });\r\n    this.trigger('setCards');\r\n  }\r\n\r\n  updateCard(newCard){\r\n    let card = this.cards.find(card => {\r\n      return newCard.index === card.index;\r\n    });\r\n\r\n    Object.assign(card, newCard);\r\n    this.trigger('updateCard', newCard);\r\n  }\r\n\r\n  getCard(index){\r\n    return this.cards[index];\r\n  }\r\n\r\n  updateCards(cards) {\r\n    cards.forEach(card => {\r\n      this.updateCard(card);\r\n    });\r\n  }\r\n\r\n  getPairsLeft(){\r\n    let pairsLeft = this.cards.length;\r\n    this.cards.forEach(card => {\r\n      if(card.found){\r\n        pairsLeft--;\r\n      }\r\n    })\r\n    pairsLeft /= 2;\r\n    return pairsLeft;\r\n  }\r\n\r\n  getLeadingPlayerGuid(){\r\n    return this.players.concat().sort((a, b) => {\r\n      return a.pairs < b.pairs;\r\n    })[0].guid;\r\n  }\r\n\r\n  flipCard(guid, index){\r\n    const player = this.getPlayer(guid);\r\n\r\n    if(!player){\r\n      this.trigger('error', 'Player who tried to flip card doesnt exist!');\r\n      return;\r\n    }\r\n\r\n    if(this.currentTurn != guid){\r\n      this.trigger('error', 'player tried to flip card without it being their turn!');\r\n      return;\r\n    }\n\r\n    const card = this.cards[index];\n\r\n    if(!card){\r\n      this.trigger('error', 'Card doesnt exist!');\r\n      return;\r\n    }\n\n    if(card.flipped){\n      this.trigger('error', 'player tried to flip card thats already flipped!');\n      return;\n    }\n\n    if(card.found){\n      this.trigger('error', 'player tried to flip card thats already found!');\n      return;\n    }\n\r\n    if(this.firstCard !== null && this.secondCard !== null){\r\n      this.trigger('error', 'This player already picked 2 cards!');\r\n      return;\r\n    }\r\n\r\n    if(this.firstCard === null){\r\n      this.firstCard = card.index;\r\n      card.flipped = true;\r\n    }else if(this.secondCard  === null){\r\n      this.secondCard = card.index;\r\n      card.flipped = true;\r\n    }\r\n\r\n    console.log('FlipCard', this.firstCard, this.secondCard);\r\n\r\n    if(this.firstCard !== null && this.secondCard !== null){\r\n      const firstCard = this.getCard(this.firstCard),\r\n            secondCard = this.getCard(this.secondCard);\r\n\r\n      if(firstCard.name && firstCard.name === secondCard.name){\r\n        //player scored\r\n        firstCard.found = true;\r\n        secondCard.found = true;\r\n\r\n        console.log('FOUND PAIR', this.firstCard, this.secondCard);\r\n\r\n        player.pairs++;\r\n\r\n        this.trigger('foundPair', player.guid, [this.firstCard, this.secondCard]);\r\n\r\n        if(this.getPairsLeft() === 0){\r\n          this.started = false;\r\n          this.trigger('gameFinished', this.getLeadingPlayerGuid());\r\n        }\r\n\r\n        //same player can pick cards again\r\n        this.trigger('flipCard', player.guid, index);\r\n        this.nextTurn(this.currentTurn);\r\n        return;\r\n      }else{\r\n        //wait a bit before we set next player\r\n        this.trigger('wait', 'Waiting 3 seconds so everyone have time to see the cards!');\r\n        setTimeout(()=> {\r\n          if(this.players.length > 0){\r\n            const index = this.players.indexOf(player) + 1;\r\n            const nextPlayer = this.players[index % this.players.length];\r\n            this.nextTurn(nextPlayer.guid);\r\n          }else{\r\n            this.started = false;\r\n          }\r\n\r\n        }, 3000);\r\n      }\r\n    }\r\n\r\n    this.trigger('flipCard', player.guid, index);\r\n  }\r\n\r\n  addPlayer(player) {\r\n    player = new Player(player);\r\n    this.players.push(player);\r\n    this.trigger('addPlayer', player);\r\n    return player;\r\n  }\r\n\r\n  removePlayer(guid) {\r\n    const playerIndex = this.players.findIndex(player => {return player.guid === guid});\r\n    console.log('Removed Player', playerIndex, guid);\r\n    const player = this.players[playerIndex];\r\n    this.players.splice(playerIndex, 1);\r\n\r\n    if(player && this.currentTurn === player.guid){\r\n      console.log('New turn player index', playerIndex, this.players.length, ((parseInt(playerIndex)+1) % this.players.length));\r\n      if(this.players.length > 0){\r\n        let nextGuid = this.players[(playerIndex+1) % this.players.length].guid;\r\n        this.nextTurn(nextGuid);\r\n      }else{\r\n        this.started = false;\r\n      }\r\n    }\r\n\r\n    this.trigger('removePlayer', guid);\r\n  }\r\n\r\n  updatePlayer() {\r\n\r\n  }\r\n\r\n  getPlayer(guid){\r\n    return this.players.find(player => {return player.guid === guid});\r\n  }\r\n\r\n  nextTurn(guid) {\r\n    //unflip cards whos pair are not found yet\r\n    console.log('New TURN', this.firstCard, this.secondCard);\r\n    if(this.firstCard !== null && !this.getCard(this.firstCard).found){\r\n      this.updateCard({\r\n        index: this.firstCard,\r\n        flipped: false\r\n      });\r\n    }\r\n\r\n    if(this.secondCard !== null && !this.getCard(this.secondCard).found){\r\n      this.updateCard({\r\n        index: this.secondCard,\r\n        flipped: false\r\n      });\r\n    }\r\n\r\n    this.firstCard = null;\r\n    this.secondCard = null;\r\n    console.log('Next Turn', guid);\r\n    this.currentTurn = guid;\r\n    this.trigger('nextTurn', guid);\r\n  }\r\n\r\n\r\n  getState() {\r\n    return {\r\n      firstCard: this.firstCard,\r\n      secondCard: this.secondCard,\r\n      currentTurn: this.currentTurn,\r\n      players: this.players.map(player => {return player.getInfo(); }),\r\n      cards: this.cards.map((card, i) => {\r\n        return {\r\n          index: i,\r\n          name: card.flipped ? card.name : null,\r\n          flipped: card.flipped,\r\n          found: card.found,\r\n          src: card.flipped ? card.src : '',\r\n        };\r\n      })\r\n    }\r\n  }\r\n\r\n  setState(state) {\r\n    this.firstCard = state.firstCard;\r\n    this.secondCard = state.secondCard;\r\n    this.currentTurn = state.currentTurn;\r\n\r\n    this.players = state.players.map(player => {\r\n      return new Player(player);\r\n    });\r\n\r\n    this.cards = state.cards.map(card => {\r\n      return card;\r\n    });\r\n\r\n    this.trigger('setState', state);\r\n  }\r\n\r\n}\r\n\r\nexport default Game;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/game.js","module.exports = require(\"es6-event-emitter\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"es6-event-emitter\"\n// module id = 7\n// module chunks = 0","\r\nclass Player{\r\n  constructor(player){\r\n    this.guid = player.guid;\r\n    this.name = player.name;\r\n    this.color = player.color;\r\n    this.pairs = player.pairs || 0;\n    this.totalPoints = 0;\r\n  }\r\n\r\n  getInfo(){\r\n    return {\r\n      guid: this.guid,\r\n      name: this.name,\r\n      color: this.color,\r\n      pairs: this.pairs,\r\n      totalPoints: this.totalPoints\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Player;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/player.js","module.exports = __webpack_public_path__ + \"54d8b1839b94c790c33698346d57bff9.json\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/cards.json\n// module id = 9\n// module chunks = 0","module.exports = require(\"guid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"guid\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 12\n// module chunks = 0"],"sourceRoot":""}